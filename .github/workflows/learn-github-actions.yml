name: learn-github-actions
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Validate
        run: mvn -B -V clean validate -Dcheckstyle.failOnViolation=true

      - name: Publish checkstyle report
        if: always()
        uses: jwgmeligmeyling/checkstyle-github-action@v1.2
        with:
          name: Checkstyle Report
          path: '**/checkstyle-result.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile
        run: mvn -B -V compile -Dcheckstyle.skip=true

      - name: Test
        run: mvn -B -V verify -Dmaven.test.failure.ignore=true -Dcheckstyle.skip=true

      - name: Publish test report
        uses: scacap/action-surefire-report@v1
        with:
          check_name: Test Report
          report_paths: '**/*-reports/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true
          # commit: TODO check whether it's acceptable to use workflow_run
  publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          settings-path: ${{ github.workspace }}

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Package
        run: mvn -B -V -s $GITHUB_WORKSPACE/settings.xml clean package -DskipTests=true -Dcheckstyle.skip=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: greeting-service-artifacts
          path: |
            target/greeting-service-*.jar
            target/greeting-service-*.jar.original
          if-no-files-found: error
