name: learn-github-actions
on:
  push:
    branches: [ master ]
  pull_request_target:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # don't persists credentials in order to reduce security issues related to "pull_request_target" event
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request_target
          # https://securitylab.github.com/research/github-actions-preventing-pwn-requests
          persist-credentials: false

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache Maven packages
        # don't cache .m2 directory in order to reduce security issues related to "pull_request_target" event
        # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request_target
        # https://securitylab.github.com/research/github-actions-preventing-pwn-requests
        if: github.event_name != 'pull_request_target'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Validate
        run: mvn -B -V clean validate -Dcheckstyle.failOnViolation=true

      - name: Publish checkstyle report
        if: always()
        uses: jwgmeligmeyling/checkstyle-github-action@v1.2
        with:
          name: Checkstyle Report
          path: '**/checkstyle-result.xml'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile
        run: mvn -B -V compile -Dcheckstyle.skip=true

      - name: Test
        run: mvn -B -V verify -Dmaven.test.failure.ignore=true -Dcheckstyle.skip=true

      - name: Publish test report
        uses: scacap/action-surefire-report@v1
        with:
          check_name: Test Report
          report_paths: '**/*-reports/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_test_failures: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: greeting-service-artifacts
          path: |
            target/greeting-service-*.jar
            target/greeting-service-*.jar.original
          if-no-files-found: error

      - name: Version extraction
        id: version-extraction
        run: echo "::set-output name=artifact_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
    outputs:
      # output parameter that is required for further usage in dependent (downstream) jobs
      artifact_version: ${{ steps.version-extraction.artifact_version }}

  publish-snapshot:
    needs: [ build ]
    # runs only in case if the event is triggered against secure environment (master branch) and
    # produced artifact version is related to SNAPSHOT
    if: github.ref == 'refs/heads/master' && endsWith(needs.build.outputs.artifact_version, '-SNAPSHOT')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          server-id: ossrh # value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          settings-path: ${{ github.workspace }} # store not in a default location to not overwrite by cache restoring

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # TODO decide whether it is required or not (needs.build.outputs.artifact_version can be used)
      - name: Version extraction
        id: version-extraction
        run: echo "::set-output name=artifact_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Snapshot
        run: echo "Snapshot version is following - ${{ steps.version-extraction.outputs.artifact_version }}"

      - name: Package
        run: mvn -B -V -s $GITHUB_WORKSPACE/settings.xml clean package -DskipTests=true -Dcheckstyle.skip=true

  publish-final:
    needs: [ build ]
    # runs only in case if the event is triggered against secure environment (master branch) and
    # produced artifact version is final
    if: github.ref == 'refs/heads/master' && !endsWith(needs.build.outputs.artifact_version, '-SNAPSHOT')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          server-id: ossrh # value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          # gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
          settings-path: ${{ github.workspace }} # store not in a default location to not overwrite by cache restoring

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # TODO decide whether it is required or not (needs.build.outputs.artifact_version can be used)
      - name: Version extraction
        id: version-extraction
        run: echo "::set-output name=artifact_version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Final
        run: echo "Final version is following - ${{ steps.version-extraction.outputs.artifact_version }}"

      - name: Package
        run: mvn -B -V -s $GITHUB_WORKSPACE/settings.xml clean package -DskipTests=true -Dcheckstyle.skip=true

      - name: Create release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "target/greeting-service-*.jar;target/greeting-service-*.jar.original"
          delete_file: "greeting-service-*"
          tag_name: v${{ steps.version-extraction.outputs.artifact_version }}
          draft: true
          overwrite: true
          verbose: true
